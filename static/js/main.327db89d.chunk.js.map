{"version":3,"sources":["Calendar/styles.module.scss","Icons/icons.svg","Icons/index.js","constants.js","Calendar/utils.js","Calendar/Event.js","Calendar/ShowMoreEvent.js","Calendar/EventRow.js","Calendar/EventRows.js","Calendar/TableCol.js","Calendar/TableRow.js","Calendar/CityRow.js","Calendar/HeaderRow.js","Calendar/Table.js","Calendar/EventImpactName.js","Calendar/index.js","App.js","index.js"],"names":["module","exports","Icon","name","color","width","height","rest","preserveAspectRatio","fill","xlinkHref","Icons","API_DATE_FORMAT","UI_DISPLAY_MONTH_FORMAT","EVENT_IMPACT","LOW","value","label","MEDIUM","HIGH","POSITIVE","EVENT_TYPE","icon","CITIES","Array","map","each","index","id","CALENDAR_EVENTS","cityId","startDate","endDate","startTime","endTime","categoryId","impactId","description","event","eventId","typeId","getEventsByRow","events","result","length","filterBy","pendingItems","stepResult","filter","includes","left","push","i","span","sortByLeftAndSpan","a","b","l1","l2","s1","s2","getCalendarEventsByCityId","calendarEvents","month","e","flatMap","monthStartDate","monthEndDate","startDateOverLapping","endDateOverLapping","parse","Date","isBefore","isAfter","differenceInDays","endOfDay","startOfDay","getDate","right","transformEvent","sort","groupedEventList","groupedList","reduce","acc","curr","key","Object","values","handleGroupSimilarEvents","eventRows","console","log","some","filteredEventRows","showMoreRowsGroupByDate","showMoreList","separateEventRowsAndShowMoreEvents","showMoreEventRow","getStyleForEvent","eventDetails","row","isShowMore","classes","styles","show_more_link","event_positive","event_mild","event_modarate","event_high","getEventColorClass","top","PADDING","leftPosition","start_overlapping","end_overlapping","style","join","EventTypeIcon","props","eventTypeId","typeConfig","SingleEvent","className","classNames","event_icon","event_name_container","event_name","event_type","MultipleEvents","gridTemplateColumns","Event","useMemo","Component","ShowMoreEvent","EventRow","rowIndex","showMoreRow","event_row","EventRows","TableCol","dataCol","headerCol","classList","col","data_col","header_col","minWidth","TableRow","forwardRef","ref","CityRow","city","monthDateList","rows","count","rowHeight","minHeight","city_name_data","dateStr","HeaderRow","header_row","city_name_header","calendar_date_header","day","date","active","activeDate","CalendarTable","cities","calendar_table","EventImpactName","impactConfig","event_impact_name_container","color_dot","backgroundColor","Calendar","currentMonth","useState","start","startOfMonth","end","endOfMonth","monthStr","format","getCurrentMonth","setMonth","dates","currentDate","valueOf","addDays","dateValue","isStartDate","isEndDate","getDaysOfMonth","container","table_text_container","table_title_container","table_text_containerm","table_action_container","table_month_container","onClick","startOfCurrentMonth","prevMonthDate","subDays","startOfPrevMonth","getPrevMonth","lastDateOfCurrentMonth","nextMonthDate","startOfNextMonth","getNextMonth","event_impact_types_container","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.327db89d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1Gf2q\",\"page_content\":\"styles_page_content__1Bw8C\",\"calendar_table\":\"styles_calendar_table__JwBy0\",\"table_text_container\":\"styles_table_text_container__2aWQv\",\"table_title_container\":\"styles_table_title_container__1FdgO\",\"table_action_container\":\"styles_table_action_container__3tr-w\",\"table_month_container\":\"styles_table_month_container__138J-\",\"event_impact_types_container\":\"styles_event_impact_types_container__290kQ\",\"row\":\"styles_row__17ZbG\",\"col\":\"styles_col__27d7V\",\"data_col\":\"styles_data_col__1_j5G\",\"header_row\":\"styles_header_row__1baL9\",\"city_name_header\":\"styles_city_name_header__LK2Yd\",\"calendar_date_header\":\"styles_calendar_date_header__3ti1Q\",\"date\":\"styles_date__15ETQ\",\"active\":\"styles_active__ZHd9q\",\"day\":\"styles_day__2m1d7\",\"city_name_data\":\"styles_city_name_data__1IOrW\",\"show_more_link\":\"styles_show_more_link__WU4ON\",\"event\":\"styles_event__3Jig1\",\"start_overlapping\":\"styles_start_overlapping__18lzz\",\"end_overlapping\":\"styles_end_overlapping__2mP2g\",\"event_mild\":\"styles_event_mild__3mhDJ\",\"event_modarate\":\"styles_event_modarate__2a6TR\",\"event_high\":\"styles_event_high__1udky\",\"event_positive\":\"styles_event_positive__3gEob\",\"event_name_container\":\"styles_event_name_container__1-S8J\",\"sticky\":\"styles_sticky__2IpWv\",\"sticky_content\":\"styles_sticky_content__25BSg\",\"event_type\":\"styles_event_type__kgSaV\",\"event_impact_name_container\":\"styles_event_impact_name_container__NrMg_\",\"color_dot\":\"styles_color_dot__Yd2hC\"};","export default __webpack_public_path__ + \"static/media/icons.73e97880.svg\";","import Icons from \"./icons.svg\";\n\nfunction Icon({ name, color, width = 16, height = 16, ...rest }) {\n  return (\n    <svg\n      preserveAspectRatio=\"xMidYMin meet\"\n      fill={color}\n      width={width}\n      height={height}\n      {...rest}\n    >\n      <use xlinkHref={`${Icons}#src--icons--${name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","export const CELL_MIN_WIDTH = 172; // table cell min width\nexport const CELL_MIN_HEIGHT = 60; // table cell min height\nexport const PADDING = 10; // left and right margin for cell event\nexport const EVENT_HEIGHT = 36; // event height\nexport const TOP_PADDING = 10; // top margin for event\nexport const TOTAL_CITIES = 10; // number of cities\nexport const MAX_ROWS_ON_UI = 2; // max number of events to be shown for single date and city on UI\nexport const API_DATE_FORMAT = \"dd/MM/yyyyy\";\nexport const UI_DISPLAY_MONTH_FORMAT = \"MMM yyyy\";\n\nexport const EVENT_IMPACT_ENUM_MAPPING = {\n  0: \"POSITIVE\",\n  1: \"LOW\",\n  2: \"MEDIUM\",\n  3: \"HIGH\"\n};\n\nexport const EVENT_IMPACT = {\n  LOW: {\n    value: \"LOW\",\n    label: \"Mild\",\n    color: \"#FFE066\"\n  },\n  MEDIUM: {\n    value: \"MEDIUM\",\n    label: \"Modarate\",\n    color: \"#EFA17E\"\n  },\n  HIGH: {\n    value: \"HIGH\",\n    label: \"High\",\n    color: \"#E899B2\"\n  },\n  POSITIVE: {\n    value: \"POSITIVE\",\n    label: \"Positive\",\n    color: \"#72B5A8\"\n  }\n};\n\nexport const EVENT_TYPE = {\n  0: {\n    name: \"Festival\",\n    icon: \"Festival\"\n  },\n  1: {\n    name: \"National Holiday\",\n    icon: \"NationalHoliday\"\n  },\n  2: {\n    name: \"Auspecious Day\",\n    icon: \"AuspeciousDay\"\n  },\n  3: {\n    name: \"Meat Ban\",\n    icon: \"MeatBanDay\"\n  },\n  4: {\n    name: \"Consumer Behaviour\",\n    icon: \"ConsumerBehaviour\"\n  },\n  5: {\n    name: \"Eclipse\",\n    icon: \"Eclipse\"\n  },\n  6: {\n    name: \"Other\",\n    icon: \"Other\"\n  }\n};\n\nexport const CITIES = new Array(TOTAL_CITIES).fill(1).map((each, index) => ({\n  name: `City ${index + 1}`,\n  id: index\n}));\n\nexport const CALENDAR_EVENTS = [\n  // event overlapping with prev month\n  {\n    cityId: [0, 4],\n    startDate: \"28/03/2022\",\n    endDate: \"03/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 0,\n    description: \"hello\",\n    event: {\n      eventId: 1,\n      name: \"Event overlap with prev month\",\n      typeId: 0\n    }\n  },\n  // event overlapping with next month\n  {\n    cityId: [0, 4],\n    startDate: \"28/04/2022\",\n    endDate: \"03/05/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Event overlap with next month\",\n      typeId: 1\n    }\n  },\n  // multiple events on same day with different impact and type\n  {\n    cityId: [1],\n    startDate: \"02/04/2022\",\n    endDate: \"02/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 0\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"02/04/2022\",\n    endDate: \"02/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 2,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 1\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"02/04/2022\",\n    endDate: \"02/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 3,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 2\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"02/04/2022\",\n    endDate: \"02/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 4,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 3\n    }\n  },\n  // multiple events on same day with same impact and different type\n  {\n    cityId: [1],\n    startDate: \"02/04/2022\",\n    endDate: \"03/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 0\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"02/04/2022\",\n    endDate: \"03/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 1\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"02/04/2022\",\n    endDate: \"03/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 2\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"02/04/2022\",\n    endDate: \"03/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 3\n    }\n  },\n  // event with more than 1 day span\n  {\n    cityId: [1],\n    startDate: \"04/04/2022\",\n    endDate: \"06/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 1\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"05/04/2022\",\n    endDate: \"06/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 2,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 2\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"05/04/2022\",\n    endDate: \"08/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 3,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 3\n    }\n  },\n  // single event per day\n  {\n    cityId: [1],\n    startDate: \"08/04/2022\",\n    endDate: \"08/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali 2\",\n      typeId: 1\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"09/04/2022\",\n    endDate: \"09/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 2,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali 2\",\n      typeId: 2\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"10/04/2022\",\n    endDate: \"10/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 3,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 3\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"11/04/2022\",\n    endDate: \"11/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 3,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 4\n    }\n  },\n  {\n    cityId: [1],\n    startDate: \"12/04/2022\",\n    endDate: \"12/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 3,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 5\n    }\n  },\n  {\n    cityId: [1, 2],\n    startDate: \"13/04/2022\",\n    endDate: \"13/04/2022\",\n    startTime: \"09:00\",\n    endTime: \"22:00\",\n    categoryId: [1, 2, 3],\n    impactId: 1,\n    description: \"hello\",\n    event: {\n      eventId: 2,\n      name: \"Diwali\",\n      typeId: 6\n    }\n  }\n];\n","import {\n  endOfMonth,\n  addDays,\n  startOfMonth,\n  format,\n  subDays,\n  parse,\n  differenceInDays,\n  endOfDay,\n  startOfDay,\n  isAfter,\n  isBefore\n} from \"date-fns\";\n\nimport {\n  API_DATE_FORMAT,\n  CELL_MIN_WIDTH,\n  EVENT_HEIGHT,\n  MAX_ROWS_ON_UI,\n  PADDING,\n  TOP_PADDING,\n  UI_DISPLAY_MONTH_FORMAT\n} from \"../constants\";\n\nimport styles from \"./styles.module.scss\";\n\nexport function getCurrentMonth(date = new Date()) {\n  const start = startOfMonth(date);\n  const end = endOfMonth(date);\n  return {\n    startDate: start,\n    endDate: end,\n    monthStr: format(start, UI_DISPLAY_MONTH_FORMAT)\n  };\n}\n\nexport function getNextMonth(currentMonth) {\n  const date = currentMonth;\n  const lastDateOfCurrentMonth = endOfMonth(date);\n  const nextMonthDate = addDays(lastDateOfCurrentMonth, 1);\n  const startOfNextMonth = startOfMonth(nextMonthDate);\n  const endOfNextMonth = endOfMonth(nextMonthDate);\n  const response = {\n    startDate: startOfNextMonth,\n    endDate: endOfNextMonth,\n    monthStr: format(startOfNextMonth, UI_DISPLAY_MONTH_FORMAT)\n  };\n  return response;\n}\n\nexport function getPrevMonth(currentMonth) {\n  const date = currentMonth;\n  const startOfCurrentMonth = startOfMonth(date);\n  const prevMonthDate = subDays(startOfCurrentMonth, 1);\n  const startOfPrevMonth = startOfMonth(prevMonthDate);\n  const endOfPrevMonth = endOfMonth(prevMonthDate);\n  const response = {\n    startDate: startOfPrevMonth,\n    endDate: endOfPrevMonth,\n    monthStr: format(startOfPrevMonth, UI_DISPLAY_MONTH_FORMAT)\n  };\n  return response;\n}\n\nexport function getDaysOfMonth(startDate, endDate) {\n  const currentDate = startOfDay(new Date()).valueOf();\n  const start = startDate.getDate();\n  const end = endDate.getDate();\n  const list = new Array(end).fill(0);\n  return list.map((each, index) => {\n    const date = addDays(startDate, index);\n    const dateValue = startOfDay(date).valueOf();\n    const isStartDate = index === start - 1;\n    const isEndDate = index === end - 1;\n    return {\n      date,\n      dateStr: format(date, \"dd\"),\n      day: format(date, \"EEE\"),\n      isStartDate,\n      isEndDate,\n      activeDate: currentDate === dateValue\n    };\n  });\n}\n\nfunction getEventsByRow(events, result = []) {\n  if (events.length === 0) return result;\n  const filterBy = [];\n  const pendingItems = [];\n  const stepResult = events.filter((each) => {\n    if (filterBy.includes(each.left)) {\n      pendingItems.push(each);\n      return false;\n    } else {\n      for (let i = 0; i < each.span; i++) {\n        filterBy.push(each.left + i);\n      }\n      return true;\n    }\n  });\n  result.push(stepResult);\n  return getEventsByRow(pendingItems, result);\n}\n\nfunction handleGroupSimilarEvents(events) {\n  const groupedList = events.reduce((acc, curr) => {\n    const key = `${curr.left}_${curr.span}_${curr.impactId}`;\n    if (acc[key]) {\n      acc[key].events.push(curr.event.event);\n      return acc;\n    }\n    acc[key] = {\n      ...curr,\n      events: [curr.event.event]\n    };\n    return acc;\n  }, {});\n  return Object.values(groupedList);\n}\n\nexport function transformEvent(event, month) {\n  const monthStartDate = month.startDate;\n  const monthEndDate = month.endDate;\n  let startDateOverLapping = false;\n  let endDateOverLapping = false;\n  let startDate = parse(event.startDate, API_DATE_FORMAT, new Date());\n  if (isBefore(startDate, monthStartDate)) {\n    startDate = monthStartDate;\n    startDateOverLapping = true;\n  }\n  let endDate = parse(event.endDate, API_DATE_FORMAT, new Date());\n  if (isAfter(endDate, monthEndDate)) {\n    endDate = monthEndDate;\n    endDateOverLapping = true;\n  }\n  const span = differenceInDays(endOfDay(endDate), startOfDay(startDate)) + 1;\n  return {\n    cityId: event.cityId,\n    eventId: event.eventId,\n    impactId: event.impactId,\n    typeId: event.event.typeId,\n    startDateOverLapping,\n    endDateOverLapping,\n    span,\n    left: startDate.getDate(),\n    right: endDate.getDate(),\n    event: {\n      ...event,\n      startDate,\n      endDate\n    }\n  };\n}\n\nexport function sortByLeftAndSpan(a, b) {\n  const l1 = a.left;\n  const l2 = b.left;\n\n  const s1 = a.span;\n  const s2 = b.span;\n  if (l1 > l2) return 1;\n  if (l1 < l2) return -1;\n  if (s1 > s2) return -1;\n  if (s1 < s2) return 1;\n  return 0;\n}\n\nfunction separateEventRowsAndShowMoreEvents(eventRows) {\n  const [filteredEventRows, showMoreEventRows] = eventRows.reduce(\n    (acc, curr, index) => {\n      if (index < MAX_ROWS_ON_UI) {\n        acc[0].push(curr);\n        return acc;\n      }\n      const rowHasEventsWithMultipleSpan = curr.some((each) => each.span > 1);\n      if (rowHasEventsWithMultipleSpan) {\n        acc[0].push(curr);\n        return acc;\n      }\n      acc[1].push(curr);\n      return acc;\n    },\n    [[], []]\n  );\n  const showMoreRowsGroupByDate = showMoreEventRows\n    .flatMap((each) => each)\n    .reduce((acc, curr) => {\n      const key = `${curr.left}_${curr.span}`;\n      if (acc[key]) {\n        acc[key].showMoreList.push(curr.event);\n        return acc;\n      }\n      acc[key] = {\n        ...curr,\n        showMoreList: [curr]\n      };\n      return acc;\n    }, {});\n  const showMoreRowEvents = Object.values(showMoreRowsGroupByDate);\n  return [filteredEventRows, showMoreRowEvents];\n}\n\nexport function getCalendarEventsByCityId(calendarEvents, cityId, month) {\n  const events = calendarEvents\n    .map((each) => each.cityId.map((e) => ({ ...each, cityId: e })))\n    .flatMap((each) => each)\n    .filter((each) => each.cityId === cityId) // filter events for given city id\n    .map((each) => transformEvent(each, month)) // transform event to required format\n    .sort(sortByLeftAndSpan); // sort events by left position and span higher to lower\n\n  const groupedEventList = handleGroupSimilarEvents(events); // group similar events to one event\n\n  const eventRows = getEventsByRow(groupedEventList); // convert events list to event rows list to display on UI\n  console.log(eventRows);\n\n  const [\n    filteredEventRows,\n    showMoreEventRow\n  ] = separateEventRowsAndShowMoreEvents(eventRows);\n\n  return {\n    eventRows: filteredEventRows,\n    showMoreEventRow\n  };\n}\n\nfunction getEventColorClass(impactId) {\n  switch (impactId) {\n    case 0:\n      return styles.event_positive;\n    case 1:\n      return styles.event_mild;\n    case 2:\n      return styles.event_modarate;\n    default:\n      return styles.event_high;\n  }\n}\n\nexport function getStyleForEvent(eventDetails, row, index, isShowMore) {\n  const {\n    span,\n    left,\n    startDateOverLapping,\n    endDateOverLapping,\n    impactId\n  } = eventDetails;\n  const classes = [];\n  if (!isShowMore) {\n    classes.push(getEventColorClass(impactId));\n  } else {\n    classes.push(styles.show_more_link);\n  }\n  const top = row * (EVENT_HEIGHT + TOP_PADDING) + TOP_PADDING;\n  let width = CELL_MIN_WIDTH * span - PADDING * 2;\n  let leftPosition = CELL_MIN_WIDTH * left + PADDING;\n  if (startDateOverLapping) {\n    leftPosition = leftPosition - PADDING;\n    width = width + PADDING;\n    classes.push(styles.start_overlapping);\n  }\n  if (endDateOverLapping) {\n    width = width + PADDING;\n    classes.push(styles.end_overlapping);\n  }\n  return {\n    style: {\n      width: `${width}px`,\n      left: `${leftPosition}px`,\n      top: `${top}px`,\n      height: `${EVENT_HEIGHT}px`\n    },\n    classes: classes.join(\" \")\n  };\n}\n","import React, { useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport Icon from \"../Icons\";\n\nimport { getStyleForEvent } from \"./utils\";\nimport { EVENT_TYPE } from \"../constants\";\n\nimport styles from \"./styles.module.scss\";\n\nfunction EventTypeIcon(props) {\n  const { eventTypeId } = props;\n  const typeConfig = EVENT_TYPE[eventTypeId] || {};\n  return <Icon name={typeConfig.icon} height={20} width={20} />;\n}\n\nfunction SingleEvent(props) {\n  const { style, className, events } = props;\n  const [event] = events;\n  const { name, typeId } = event;\n  const typeConfig = EVENT_TYPE[typeId] || {};\n  return (\n    <div style={style} className={classNames(className, styles.event)}>\n      <div className={styles.event_icon}>\n        <EventTypeIcon eventTypeId={typeId} />\n      </div>\n      <div className={styles.event_name_container}>\n        <span className={styles.event_name}>{name}</span>\n        <span className={styles.event_type}>{typeConfig.name}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction MultipleEvents(props) {\n  const { style, className, events } = props;\n  const length = events.length;\n  return (\n    <div\n      style={{\n        ...style,\n        gridTemplateColumns: `repeat(${length}, 15px)`\n      }}\n      className={classNames(className, styles.event)}\n    >\n      {events.map((each) => (\n        <div className={styles.event_icon}>\n          <EventTypeIcon eventTypeId={each.typeId} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction Event(props) {\n  const { eventDetails, row, index } = props;\n  const { events } = eventDetails;\n\n  const { style, classes } = useMemo(\n    () => getStyleForEvent(eventDetails, row, index),\n    [eventDetails, row, index]\n  );\n\n  const Component = useMemo(() => {\n    if (events.length > 1) return MultipleEvents;\n    return SingleEvent;\n  }, [events]);\n\n  return (\n    <Component\n      className={classes}\n      style={style}\n      events={events}\n      row={row}\n      index={index}\n    />\n  );\n}\n\nEvent.propTypes = {\n  eventDetails: PropTypes.shape(),\n  row: PropTypes.number,\n  index: PropTypes.number\n};\n\nexport default Event;\n","import React, { useMemo } from \"react\";\nimport { getStyleForEvent } from \"./utils\";\n\nfunction ShowMoreEvent(props) {\n  const { eventDetails, row, index } = props;\n  const { showMoreList } = eventDetails;\n  const { style, classes } = useMemo(\n    () => getStyleForEvent(eventDetails, row, index, true),\n    [eventDetails, row, index]\n  );\n  return (\n    <div style={style} className={classes}>\n      & {showMoreList.length} more\n    </div>\n  );\n}\n\nexport default ShowMoreEvent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Event from \"./Event\";\n\nimport styles from \"./styles.module.scss\";\nimport ShowMoreEvent from \"./ShowMoreEvent\";\n\nfunction EventRow(props) {\n  const { rowIndex, events, showMoreRow } = props;\n  return (\n    <div className={styles.event_row}>\n      {events.map((each, index) => {\n        if (!showMoreRow) {\n          return (\n            <Event\n              eventDetails={each}\n              row={rowIndex}\n              index={index}\n              key={index}\n            />\n          );\n        }\n        return (\n          <ShowMoreEvent\n            eventDetails={each}\n            row={rowIndex}\n            index={index}\n            key={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nEventRow.propTypes = {\n  rowIndex: PropTypes.number,\n  events: PropTypes.arrayOf(PropTypes.shape()),\n  showMoreRow: PropTypes.bool\n};\nexport default EventRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport EventRow from \"./EventRow\";\n\nfunction EventRows(props) {\n  const { eventRows, cityId, showMoreEventRow } = props;\n  return (\n    <div>\n      {eventRows.map((each, index) => {\n        return (\n          <EventRow key={`${cityId} ${index}`} rowIndex={index} events={each} />\n        );\n      })}\n      <EventRow\n        rowIndex={eventRows.length}\n        events={showMoreEventRow}\n        showMoreRow\n      />\n    </div>\n  );\n}\n\nEventRows.propTypes = {\n  eventRows: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape())),\n  showMoreEventRow: PropTypes.arrayOf(PropTypes.shape),\n  cityId: PropTypes.number\n};\n\nexport default EventRows;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { CELL_MIN_WIDTH } from \"../constants\";\n\nimport styles from \"./styles.module.scss\";\n\nfunction TableCol(props) {\n  const { className = \"\", dataCol, headerCol, style, height, ...rest } = props;\n  const classList = [styles.col];\n  if (className) classList.push(className);\n  if (dataCol) classList.push(styles.data_col);\n  if (headerCol) classList.push(styles.header_col);\n\n  return (\n    <div\n      {...rest}\n      style={{\n        ...style,\n        minWidth: `${CELL_MIN_WIDTH}px`\n      }}\n      className={classList.join(\" \")}\n    ></div>\n  );\n}\n\nTableCol.propTypes = {\n  className: PropTypes.string,\n  dataCol: PropTypes.bool,\n  headerCol: PropTypes.bool,\n  style: PropTypes.shape(),\n  height: PropTypes.number\n};\n\nexport default TableCol;\n","import React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./styles.module.scss\";\n\nconst TableRow = forwardRef((props, ref) => {\n  const { className = \"\", ...rest } = props;\n  return (\n    <div ref={ref} {...rest} className={`${styles.row} ${className}`}></div>\n  );\n});\n\nTableRow.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TableRow;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport EventRows from \"./EventRows\";\nimport TableCol from \"./TableCol\";\nimport TableRow from \"./TableRow\";\n\nimport { getCalendarEventsByCityId } from \"./utils\";\n\nimport { CELL_MIN_HEIGHT, EVENT_HEIGHT, TOP_PADDING } from \"../constants\";\n\nimport styles from \"./styles.module.scss\";\n\nfunction CityRow(props) {\n  const { city, monthDateList, month, calendarEvents } = props;\n  const { id: cityId } = city;\n\n  const [eventRows, showMoreEventRow, rowHeight] = useMemo(() => {\n    const {\n      eventRows: rows,\n      showMoreEventRow: showMoreRow\n    } = getCalendarEventsByCityId(calendarEvents, cityId, month);\n    let count = rows.length;\n    if (showMoreRow.length) {\n      count = count + 1;\n    }\n    const height = count * (EVENT_HEIGHT + TOP_PADDING) + TOP_PADDING;\n    return [rows, showMoreRow, height];\n  }, [calendarEvents, cityId, month]);\n\n  return (\n    <TableRow\n      style={{\n        height: `${rowHeight}px`,\n        minHeight: `${CELL_MIN_HEIGHT}px`\n      }}\n    >\n      <TableCol className={styles.city_name_data} dataCol>\n        {city.name}\n      </TableCol>\n      {monthDateList.map((each) => {\n        return <TableCol key={`${city.id} ${each.dateStr}`} dataCol></TableCol>;\n      })}\n      <EventRows\n        eventRows={eventRows}\n        showMoreEventRow={showMoreEventRow}\n        cityId={city.id}\n      />\n    </TableRow>\n  );\n}\n\nCityRow.propTypes = {\n  city: PropTypes.shape(),\n  monthDateList: PropTypes.arrayOf(PropTypes.shape()),\n  month: PropTypes.shape(),\n  calendarEvents: PropTypes.arrayOf(PropTypes.shape())\n};\n\nexport default CityRow;\n","import React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TableCol from \"./TableCol\";\nimport TableRow from \"./TableRow\";\n\nimport styles from \"./styles.module.scss\";\nimport classNames from \"classnames\";\n\nconst HeaderRow = forwardRef((props, ref) => {\n  const { monthDateList } = props;\n  return (\n    <TableRow className={styles.header_row} ref={ref}>\n      <TableCol headerCol className={styles.city_name_header}>\n        <div>City Name</div>\n      </TableCol>\n      {monthDateList.map((each) => (\n        <TableCol\n          headerCol\n          className={styles.calendar_date_header}\n          key={`${each.dateStr} ${each.day}`}\n        >\n          <div className={styles.day}>{each.day}</div>\n          <div\n            className={classNames(styles.date, {\n              [styles.active]: each.activeDate\n            })}\n          >\n            {each.dateStr}\n          </div>\n        </TableCol>\n      ))}\n    </TableRow>\n  );\n});\n\nHeaderRow.propTypes = {\n  monthDateList: PropTypes.arrayOf(PropTypes.shape())\n};\n\nexport default HeaderRow;\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CityRow from \"./CityRow\";\nimport HeaderRow from \"./HeaderRow\";\n\nimport styles from \"./styles.module.scss\";\n\nfunction CalendarTable(props) {\n  const { monthDateList = [], month, cities, calendarEvents } = props;\n\n  return (\n    <div className={styles.calendar_table}>\n      <HeaderRow monthDateList={monthDateList} />\n      {cities.map((city) => (\n        <CityRow\n          key={city.id}\n          calendarEvents={calendarEvents}\n          monthDateList={monthDateList}\n          month={month}\n          city={city}\n        />\n      ))}\n    </div>\n  );\n}\n\nCalendarTable.propTypes = {\n  cities: PropTypes.arrayOf(PropTypes.shape()),\n  monthDateList: PropTypes.arrayOf(PropTypes.shape()),\n  month: PropTypes.shape(),\n  calendarEvents: PropTypes.arrayOf(PropTypes.shape())\n};\n\nexport default CalendarTable;\n","import classNames from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\nfunction EventImpactName(props) {\n  const { impactConfig } = props;\n  return (\n    <div className={styles.event_impact_name_container}>\n      <span\n        className={classNames(styles.color_dot)}\n        style={{\n          backgroundColor: impactConfig.color\n        }}\n      ></span>\n      <span>{impactConfig.label}</span>\n    </div>\n  );\n}\n\nexport default EventImpactName;\n","import React, { useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CalendarTable from \"./Table\";\n\nimport {\n  getCurrentMonth,\n  getDaysOfMonth,\n  getNextMonth,\n  getPrevMonth\n} from \"./utils\";\n\nimport { CALENDAR_EVENTS, CITIES, EVENT_IMPACT } from \"../constants\";\n\nimport styles from \"./styles.module.scss\";\nimport classNames from \"classnames\";\nimport Icon from \"../Icons\";\nimport EventImpactName from \"./EventImpactName\";\n\nfunction Calendar(props) {\n  const { currentMonth } = props;\n  const [month, setMonth] = useState(getCurrentMonth(currentMonth));\n\n  function handlePrevMonth() {\n    setMonth(getPrevMonth(month.startDate));\n  }\n\n  function handleNextMonth() {\n    setMonth(getNextMonth(month.startDate));\n  }\n\n  const dates = useMemo(() => {\n    return getDaysOfMonth(month.startDate, month.endDate);\n  }, [month]);\n\n  return (\n    <div className={styles.container}>\n      <div\n        className={classNames(\n          styles.table_text_container,\n          styles.table_title_container\n        )}\n      >\n        <span>Event Impact on Sales</span>\n      </div>\n      <div\n        className={classNames(\n          styles.table_text_containerm,\n          styles.table_action_container\n        )}\n      >\n        <div>\n          <button>+ Add</button>\n        </div>\n        <div className={styles.table_month_container}>\n          <span>\n            <button onClick={handlePrevMonth}>\n              <Icon name=\"ArrowLeftIcon\" width={10} height={10} />\n            </button>\n          </span>\n          <span>&nbsp;{month.monthStr}&nbsp;</span>\n          <span>\n            <button onClick={handleNextMonth}>\n              <Icon name=\"ArrowRightIcon\" width={10} height={10} />\n            </button>\n          </span>\n        </div>\n        <div className={styles.event_impact_types_container}>\n          {Object.values(EVENT_IMPACT).map((each) => (\n            <EventImpactName impactConfig={each} />\n          ))}\n        </div>\n        <div>\n          <button>Filters</button>\n        </div>\n      </div>\n      <CalendarTable\n        calendarEvents={CALENDAR_EVENTS}\n        cities={CITIES}\n        month={month}\n        monthDateList={dates}\n      />\n    </div>\n  );\n}\n\nCalendar.propTypes = {\n  currentMonth: PropTypes.shape()\n};\n\nexport default Calendar;\n","import Calendar from \"./Calendar\";\n// import CalendarWithTable from \"./CalendarWithTable\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className={`App`}>\n      <Calendar currentMonth={new Date()} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}